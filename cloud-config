#cloud-config
 
hostname: chihiro
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAyukAK+pD6B3EkOlGtTC5Oyqx9N/1AZYqkaP0QEVn6pr+vkXlhE7CljfTT1egRGp76Ud18H3tCLDy6rhTpH5Kb+96eC8AWeKNrFbQWEjaBPbPlMUa96AeY+HXqH8JlHPkPu8k0BRVpnfeC6WKth8qU7j5CyqIH+SArKX5RvNgbqsxnR0X0XuvBKCiWt90yqnEC7JvCuznCKPeeLUOOjtf/9kYBfDIZdBKvIYxTZ7nx1WXQMeVxmsQrM29BPtZSXGhNQhDPHzIxDV8bNrXy5HXpCIQS3Qsv+T1TMgYjAl+C/1T+CW5wC+rLJTpdOjlRJThBYJw1xgQsfUIPedh3kEEpQ==
users:
  name: eatnumber1
  groups:
    - sudo
    - docker
  coreos-ssh-import-github: eatnumber1
coreos:
  update:
    reboot-strategy: off
  etcd:
    name: chihiro
    #discovery: https://discovery.etcd.io/5ec6be07000f9add06e321b0b5911f90
    #peers: 192.168.1.2:7001
    addr: 192.168.1.2:4001
    peer-addr: 192.168.1.2:7001
  fleet:
    public-ip: 192.168.1.2
    metadata: role=etcd,role=kubernetes
  flannel:
    etcd-prefix: /flannel.eatnumber1.com/network
  units:
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone America/Los_Angeles
        RemainAfterExit=yes
        Type=oneshot
    - name: custom-reboot.service
      runtime: true
      content: |
        [Unit]
        Description=Reboot if needed

        [Service]
        ExecStart=/usr/bin/bash -c 'if update_engine_client -status | grep NEED_REBOOT; then reboot; fi' 
    - name: custom-reboot.timer
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Reboot if needed at 05:00 daily

        [Timer]
        OnCalendar=*-*-* 05:00:00
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount docker subvol to /var/lib/docker
        Before=docker.service

        [Mount]
        What=/dev/disk/by-label/space
        Where=/var/lib/docker
        Type=btrfs
        Options=subvol=docker
    - name: space.mount
      command: start
      content: |
        [Unit]
        Description=Mount space to /space

        [Mount]
        What=/dev/disk/by-label/space
        Where=/space
        Type=btrfs
    - name: flannel.service
      command: start
      content: |
        [Unit]
        After=network-online.target
        Wants=network-online.target
        After=etcd.service
        Wants=etcd.service
        Description=etcd backed overlay network for containers
        [Service]
        Type=notify
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/flannel/flanneld
        ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld
        ExecStart=/opt/bin/flanneld
    - name: docker.service
      command: start
      content: |
        [Unit]
        After=flannel.service
        Wants=flannel.service
        Description=Docker Application Container Engine
        Documentation=http://docs.docker.io
        [Service]
        EnvironmentFile=/run/flannel/subnet.env
        ExecStartPre=/bin/mount --make-rprivate /
        ExecStart=/usr/bin/docker -d --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} -s=btrfs -H fd://

        [Install]
        WantedBy=multi-user.target
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/snenv/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start

# vim:et ts=2 sw=2 sts=2 ai
